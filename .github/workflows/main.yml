name: Build Tailwind CSS

on:
  push:
    branches: [ main, master, localize ]
  workflow_dispatch:

jobs:
  build-css:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
        
    - name: Create assets directory
      run: mkdir -p assets src
      
    - name: Download Tailwind CSS standalone
      run: |
        curl -sLo tailwindcss "https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-x64"
        chmod +x tailwindcss
        
    - name: Create Tailwind config and input files
      run: |
        cat > src/input.css << 'EOF'
        @tailwind base;
        @tailwind components;
        @tailwind utilities;
        EOF
        
        cat > tailwind.config.js << 'EOF'
        module.exports = {
          content: ["./index.html"],
          theme: { extend: {} },
          plugins: []
        }
        EOF
        
    - name: Build Tailwind CSS
      run: |
        ./tailwindcss -i ./src/input.css -o ./assets/tailwind.min.css --minify
        echo "‚úÖ CSS —Å–æ–∑–¥–∞–Ω –≤ assets/tailwind.min.css"
        ls -lh assets/tailwind.min.css
        
    - name: Fix HTML for proper CSS loading
      run: |
        python3 << 'EOF'
        import re
        
        with open('index.html', 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å—Å—ã–ª–∫—É –Ω–∞ css/tailwind.min.css
        content = re.sub(r'<link rel="stylesheet" href="\./css/tailwind\.min\.css">', '', content)
        
        # –ò—â–µ–º –∏ –∑–∞–º–µ–Ω—è–µ–º –±–ª–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —à—Ä–∏—Ñ—Ç–æ–≤, –¥–æ–±–∞–≤–ª—è–µ–º CSS —Å—Å—ã–ª–∫—É –ø–æ—Å–ª–µ –Ω–µ–≥–æ
        font_block_end = content.find('</script>')
        if font_block_end != -1:
            # –ù–∞—Ö–æ–¥–∏–º –∫–æ–Ω–µ—Ü –ø–µ—Ä–≤–æ–≥–æ script –±–ª–æ–∫–∞ (—à—Ä–∏—Ñ—Ç—ã)
            insert_pos = font_block_end + len('</script>')
            
            # –í—Å—Ç–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ CSS
            css_link = '\n\n<!-- –õ–æ–∫–∞–ª—å–Ω—ã–π Tailwind CSS -->\n<link rel="stylesheet" href="./assets/tailwind.min.css">\n'
            content = content[:insert_pos] + css_link + content[insert_pos:]
            
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ CSS")
        else:
            print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –±–ª–æ–∫ —à—Ä–∏—Ñ—Ç–æ–≤")
        
        with open('index.html', 'w', encoding='utf-8') as f:
            f.write(content)
        EOF
        
    - name: Verify CSS file content
      run: |
        echo "üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ CSS —Ñ–∞–π–ª–∞:"
        head -5 assets/tailwind.min.css
        echo ""
        echo "üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞:"
        ls -lh assets/tailwind.min.css
        
    - name: Check changes and cleanup
      id: verify-changed-files
      run: |
        rm -f tailwindcss
        
        if [ -n "$(git status --porcelain)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è:"
          git status --porcelain
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Commit and push changes
      if: steps.verify-changed-files.outputs.changed == 'true'
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: 'üé® –ò—Å–ø—Ä–∞–≤–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ Tailwind CSS [skip ci]'
        file_pattern: 'assets/tailwind.min.css src/input.css tailwind.config.js index.html'
        commit_user_name: 'GitHub Action'
        commit_user_email: 'action@github.com'
